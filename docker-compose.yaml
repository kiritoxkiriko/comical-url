version: '3.8'

services:
  # Short URL Application
  shorturl:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - CONFIG_PATH=/root/config.yaml
    volumes:
      - ./configs/config.yaml:/root/config.yaml:ro
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - shorturl-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: shorturl
      MYSQL_USER: shorturl
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - shorturl-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shorturl-network

  # PostgreSQL (alternative to MySQL)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: shorturl
      POSTGRES_USER: shorturl
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shorturl"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shorturl-network
    profiles:
      - postgres

volumes:
  mysql_data:
  redis_data:
  postgres_data:

networks:
  shorturl-network:
    driver: bridge